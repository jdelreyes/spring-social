spring.application.name=notification-service
server.port=8085
# services
user.service.url=http://user-service:8081/api/users
friendship.service.url=http://friendship-service:8083/api/friendships
post.service.url=http://post-service:8084/api/posts
#eureka
eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
# postgresql config
spring.datasource.url=jdbc:postgresql://postgresql-notification-service:5432/notification-service
spring.datasource.username=rootadmin
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# spring actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
# zipkin
# is used to configure the endpoints where the traces are sent to
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}]
# kafka consumer
spring.kafka.bootstrap-servers=broker:29092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=notificationGroup
spring.kafka.consumer.properties.spring.json.type.mapping=\
  friendship:ca.springsocial.notificationservice.events.friendship.FriendRequestSentEvent,\
  post:ca.springsocial.notificationservice.events.post.PostCreatedEvent,\
  comment:ca.springsocial.notificationservice.events.comment.CommentCreatedEvent
