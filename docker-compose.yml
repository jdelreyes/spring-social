# NOTES:
# cannot have conflicting container names

# COMMANDS:
# docker-compose -p spring-social -f docker-compose.yml up -d

version: '3.8'

services:
  #  just a label
  user-service:
    image: user-service
    ports:
      - "8080:8080"
    #    builds app
    build:
      context: ./user-service
      dockerfile: ./Dockerfile
    container_name: user-service
    environment:
      # property available provided by spring
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgresql-user-service
    networks:
      - spring-social

  postgresql-user-service:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: rootadmin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user-service
    volumes:
      - ./data/postgres/users:/var/lib/postgresql/data
      - ./init/postgres/docker-entrypoint-initdb.d/user-service-init.sql:/docker-entrypoint-initdb.d/init.sql
    container_name: postgresql-user-service
    restart: unless-stopped
    networks:
      - spring-social

  post-service:
    image: post-service
    ports:
      - "8084:8084"
    #    builds app
    build:
      context: ./post-service
      dockerfile: ./Dockerfile
    container_name: post-service
    environment:
      # property available provided by spring
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb-post-service
    networks:
      - spring-social

  mongodb-post-service:
    image: mongo:latest
    ports:
      - "27016:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootadmin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./data/mongo/posts:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/post-service-init.js:/docker-entrypoint-initdb.d/post-service-init.js:ro
    container_name: mongodb-post-service
    restart: unless-stopped
    command: mongod --auth
    networks:
      - spring-social

  comment-service:
    image: comment-service
    ports:
      - "8082:8082"
    #    builds app
    build:
      context: ./comment-service
      dockerfile: ./Dockerfile
    container_name: comment-service
    environment:
      # property available provided by spring
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgresql-comment-service
    networks:
      - spring-social

  postgresql-comment-service:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: rootadmin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: comment-service
    volumes:
      - ./data/postgres/comments:/var/lib/postgresql/data
      - ./init/postgres/docker-entrypoint-initdb.d/comment-service-init.sql:/docker-entrypoint-initdb.d/init.sql
    container_name: postgresql-comment-service
    restart: unless-stopped
    networks:
      - spring-social

  friendship-service:
    image: friendship-service
    ports:
      - "8083:8083"
    #    builds app
    build:
      context: ./friendship-service
      dockerfile: ./Dockerfile
    container_name: friendship-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      # property available provided by spring
    depends_on:
      - mongodb-friendship-service
    networks:
      - spring-social

  mongodb-friendship-service:
    image: mongo:latest
    ports:
      - "27014:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootadmin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./data/mongo/friendships:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/friendship-service-init.js:/docker-entrypoint-initdb.d/friendship-service-init.js:ro
    container_name: mongodb-friendship-service
    restart: unless-stopped
    command: mongod --auth
    networks:
      - spring-social

networks:
  spring-social:
    driver: bridge
