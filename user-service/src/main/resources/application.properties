spring.application.name=user-service
#server port
server.port=8081
# postgresql config
spring.datasource.url=jdbc:postgresql://localhost:5432/user-service
spring.datasource.username=rootadmin
spring.datasource.password=password
# none, validate, update, create, create-drop
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# services
comment.service.url=http://localhost:8082/api/comments
post.service.url=http://localhost:8084/api/posts
# eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
# spring actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
# resilience4j configuration
resilience4j.circuitbreaker.instances.circuitBreakerService.register-health-indicator=true
# determine how many events can be stored in the ring buffer
resilience4j.circuitbreaker.instances.circuitBreakerService.event-consumer-buffer-size=10
# sliding window type can be either COUNT_BASED or TIME_BASED
resilience4j.circuitbreaker.instances.circuitBreakerService.slidingWindowType=COUNT_BASED
# number of calls which are needed to determine if the circuit breaker should be opened or closed
resilience4j.circuitbreaker.instances.circuitBreakerService.slidingWindowSize=5
# sets the failure rate threshold in perecntage
resilience4j.circuitbreaker.instances.circuitBreakerService.failureRateThreshold=50
# sets the wait duration which specifies how long the circuitbreaker should stay open, before if switches to half open
resilience4j.circuitbreaker.instances.circuitBreakerService.waitDurationInOpenState=5s
# specifies the number of permitted calls when the circuitbreaker is half open
resilience4j.circuitbreaker.instances.circuitBreakerService.permittedNumberOfCallsInHalfOpenState=3
# enables automatic transition from OPEN to HALF_OPEN state once the wait duration has passed
resilience4j.circuitbreaker.instances.circuitBreakerService.automaticTransitionFromOpenToHalfOpenEnabled=true
# resilience4j timeLimiter Configurations
resilience4j.timelimiter.instances.circuitBreakerService.timeout-duration=3s
# resilience4j retry configurations
resilience4j.retry.instances.circuitBreakerService.max-attempts=3
resilience4j.retry.instances.circuitBreakerService.wait-duration=5s
# zipkin
# is used to configure the endpoints where the traces are send to
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}]